name: Release

  
# when it active ? 
on: 
  push:
    tags:
      - '*'

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      id: ${{ steps.create_release.outputs.id }}
      html_url: ${{ steps.create_release.outputs.html_url }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}


  # WINDOWS JOB 
  publish:
    runs-on: windows-latest

    strategy:
      matrix:
        architecture: ['x64', 'x86']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: ${{matrix.architecture}}
      - name: install_deps
        run: "make install_deps"
      - name: install PySide2    # Parce que @ysard veut absolument les version deprecated
        run : pip install PySide2
      - name: install windows deps 
        run: |
            pip install pywin32
            pip install PyInstaller==4.0
      - name: test
        run: python -m pytest tests/core

      - name: create binary 
        run: pyinstaller -i icon.ico --name="cutevariant_${{matrix.architecture}}" --hidden-import json --add-data "cutevariant;cutevariant" cutevariant\__main__.py

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: cutevariant-standalone-${{matrix.architecture}}
          path: dist
      
      - name: Upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./cutevariant-standalone-${{matrix.architecture}}.zip
          asset_name: cutevariant-standalone-${{matrix.architecture}}.zip
          asset_content_type: application/zip



  # MAC OS JOB 

  # Macos:
  #   runs-on: macOS-latest
  #   if: "contains(github.event.head_commit.message, '[deploy]')"
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.8'
  #     - name: install_deps
  #       run: "make install"
  #     - name: install PySide2    # Parce que @ysard veut absolument les version deprecated
  #       run : pip install PySide2
  #     - name: install mac deps 
  #       run: |
  #           pip install PyInstaller==4.0
  #     - name: create binary 
  #       run: pyinstaller -i icon.ico --name="cutevariant" --add-data cutevariant:cutevariant cutevariant/__main__.py;ls
